DB 300000 Records
Fields {
  name
  slug
  authorName
  authorSlug
  imagePathRaw
  status
  categories
  tags
  chapterPathRaw
  outsideChaptersLength
  insideChaptersLength
  hasChapterNeedContent
  outsideSrc
  outsideSVC,
  language,
  updateFields: []
}

chapter.json
[{
  storySlug
  index
  name
  slug
  contentPathRaw
  outsideSrc
  outsideSVC
}]

/** create info */
site craw stories >> init record
user request >> site craw story >> init record

/** update info */
db >> site craw stories >> update info >> push fields change 2 updateFields

/** update chapters */
if (db.outsideChaptersLength === db.insideChaptersLength) {
  db.outsideSVC(db.outsideSrc)
  /**
   * update db.outsideChaptersLength
   * update (chapterPathGit) chapter.jon
   * set db.hasChapterNeedContent = true
   */
}
// -------------------------------------------
itemNeedContent = []
if (db.hasChapterNeedContent) {
  items from chapter.json
  for(item of items) {
    if(!item.contentPathRaw) {
      itemNeedContent.push({
        ...item,
        db
      })
      /* can update here */
    }
  }
}